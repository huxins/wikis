(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{381:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"线程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程基础"}},[t._v("#")]),t._v(" 线程基础")]),t._v(" "),a("h2",{attrs:{id:"线程使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程使用方式"}},[t._v("#")]),t._v(" 线程使用方式")]),t._v(" "),a("h3",{attrs:{id:"实现-runnable-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现-runnable-接口"}},[t._v("#")]),t._v(" 实现 Runnable 接口")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("函数式接口")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"实现-callable-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现-callable-接口"}},[t._v("#")]),t._v(" 实现 Callable 接口")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CallableImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callable")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FutureTask")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FutureTask")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CallableImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"继承-thread-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承-thread-类"}},[t._v("#")]),t._v(" 继承 Thread 类")]),t._v(" "),a("p",[t._v("同样需要实现 "),a("code",[t._v("run()")]),t._v(" 方法，因为 Thread 类实现了 Runable 接口。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubThread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("匿名类")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"实现接口-vs-继承-thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现接口-vs-继承-thread"}},[t._v("#")]),t._v(" 实现接口 VS 继承 Thread")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实现 Runnable 接口相比继承 Thread 类有如下优势")]),t._v(" "),a("ul",[a("li",[t._v("可以避免由于 Java 的单继承特性而带来的局限")]),t._v(" "),a("li",[t._v("代码能够被多个线程共享")]),t._v(" "),a("li",[t._v("线程池只能放入实现 Runable 或 Callable 的类")])])]),t._v(" "),a("li",[a("p",[t._v("实现 Runnable 接口和实现 Callable 接口的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Runnable 从 1.1 就有，Callable 是 1.5 之后加上去的")])]),t._v(" "),a("li",[a("p",[t._v("实现 Callable 接口的任务线程能返回执行结果")])]),t._v(" "),a("li",[a("p",[t._v("Callable 接口的 call() 方法允许抛出异常，而 Runnable 接口的 run() 方法的异常只能在内部消化，不能继续上抛")]),t._v(" "),a("p",[t._v("一个线程出了异常，应由所在的线程处理，别的线程没有义务或上下文来处理。")])]),t._v(" "),a("li",[a("p",[t._v("加入线程池运行，Runnable 使用 ExecutorService 的 execute 方法，Callable 使用 submit 方法")])])])])]),t._v(" "),a("h2",{attrs:{id:"基础线程机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础线程机制"}},[t._v("#")]),t._v(" 基础线程机制")]),t._v(" "),a("h3",{attrs:{id:"executor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executor"}},[t._v("#")]),t._v(" Executor")]),t._v(" "),a("p",[t._v("管理多个独立的异步任务的执行，而无需开发者显式地管理线程的生命周期。")]),t._v(" "),a("ul",[a("li",[t._v("CachedThreadPool：一个任务创建一个线程。")]),t._v(" "),a("li",[t._v("FixedThreadPool：所有任务只能使用固定大小的线程。")]),t._v(" "),a("li",[t._v("SingleThreadExecutor：相当于大小为 1 的 FixedThreadPool。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executorService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCachedThreadPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexecutorService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexecutorService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"daemon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daemon"}},[t._v("#")]),t._v(" Daemon")]),t._v(" "),a("p",[t._v("当 JVM 中运行的线程都是守护线程时，JVM 将退出。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nthread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDaemon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"线程状态转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程状态转换"}},[t._v("#")]),t._v(" 线程状态转换")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static-wiki.inxiny.cn/Java/Java%20SE/Thread/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80-%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2.png",alt:"线程状态转换"}})]),t._v(" "),a("h3",{attrs:{id:"new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new"}},[t._v("#")]),t._v(" New")]),t._v(" "),a("p",[t._v("新建状态，创建后尚未启动")]),t._v(" "),a("h3",{attrs:{id:"runnable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runnable"}},[t._v("#")]),t._v(" Runnable")]),t._v(" "),a("p",[t._v("可运行状态，可能正在运行，也可能正在等待 CPU 时间片。")]),t._v(" "),a("p",[t._v("包含了操作系统线程状态中的 Running 和 Ready。")]),t._v(" "),a("h3",{attrs:{id:"blocking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blocking"}},[t._v("#")]),t._v(" Blocking")]),t._v(" "),a("p",[t._v("阻塞状态，等待获取一个排它锁，如果其线程释放了锁就会结束此状态。")]),t._v(" "),a("h3",{attrs:{id:"waiting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#waiting"}},[t._v("#")]),t._v(" Waiting")]),t._v(" "),a("p",[t._v("无限期等待状态，等待其他线程显式地唤醒，否则不会被分配 CPU 时间片。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("进入")]),t._v(" "),a("th",[t._v("退出")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Object#wait()")]),t._v(" "),a("td",[t._v("Object#notify() / Object#notifyAll()")])]),t._v(" "),a("tr",[a("td",[t._v("Thread#join()")]),t._v(" "),a("td",[t._v("被调用的线程执行完毕")])]),t._v(" "),a("tr",[a("td",[t._v("LockSupport#park()")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("h3",{attrs:{id:"timed-waiting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timed-waiting"}},[t._v("#")]),t._v(" Timed Waiting")]),t._v(" "),a("p",[t._v("限期等待状态。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("进入")]),t._v(" "),a("th",[t._v("退出")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Thread#sleep(long millis)")]),t._v(" "),a("td",[t._v("时间结束")])]),t._v(" "),a("tr",[a("td",[t._v("Object#wait(long timeout)")]),t._v(" "),a("td",[t._v("时间结束 / Object.notify() / Object.notifyAll()")])]),t._v(" "),a("tr",[a("td",[t._v("Thread#join(long millis)")]),t._v(" "),a("td",[t._v("时间结束 / 被调用的线程执行完毕")])]),t._v(" "),a("tr",[a("td",[t._v("LockSupport#parkNanos")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("LockSupport#parkUntil")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("h3",{attrs:{id:"terminated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terminated"}},[t._v("#")]),t._v(" Terminated")]),t._v(" "),a("p",[t._v("可以是线程结束任务之后自己结束，或者产生了异常而结束。")]),t._v(" "),a("h2",{attrs:{id:"线程阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程阻塞"}},[t._v("#")]),t._v(" 线程阻塞")]),t._v(" "),a("h3",{attrs:{id:"同步阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步阻塞"}},[t._v("#")]),t._v(" 同步阻塞")]),t._v(" "),a("p",[t._v("运行的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入“锁池”中。")]),t._v(" "),a("h3",{attrs:{id:"等待阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#等待阻塞"}},[t._v("#")]),t._v(" 等待阻塞")]),t._v(" "),a("p",[t._v("运行的线程执行 "),a("code",[t._v("wait()")]),t._v(" 方法，该线程会释放占用的所有资源，JVM 会把该线程放入“等待池”中。")]),t._v(" "),a("p",[t._v("进入这个状态后，无法自动唤醒，必须由其他线程调用 "),a("code",[t._v("notify()")]),t._v(" 或 "),a("code",[t._v("notifyAll()")]),t._v(" 方法才能将其唤醒。")]),t._v(" "),a("h3",{attrs:{id:"其他阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他阻塞"}},[t._v("#")]),t._v(" 其他阻塞")]),t._v(" "),a("p",[t._v("运行的线程执行 "),a("code",[t._v("sleep()")]),t._v(" 或 "),a("code",[t._v("join()")]),t._v(" 方法，或者发出了 I/O 请求时，JVM 会把该线程置为阻塞状态。")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("sleep()")]),t._v(" 状态超时、"),a("code",[t._v("join()")]),t._v(" 等待线程终止或者超时、或者 I/O 处理完毕时，线程重新转入就绪状态。")]),t._v(" "),a("h2",{attrs:{id:"线程中断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程中断"}},[t._v("#")]),t._v(" 线程中断")]),t._v(" "),a("h3",{attrs:{id:"interrupt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interrupt"}},[t._v("#")]),t._v(" interrupt")]),t._v(" "),a("p",[t._v("线程的实例方法 "),a("code",[t._v("interrupt()")]),t._v(" 不能立即中断线程，该方法仅告诉线程已经有中断请求，至于是否中断取决于线程内部逻辑。")]),t._v(" "),a("p",[t._v("线程的实例方法 "),a("code",[t._v("isInterrupted()")]),t._v(" 可以检测 "),a("code",[t._v("请求中断标志")]),t._v(" 为 true 还是 false。")]),t._v(" "),a("p",[t._v("线程的静态方法 "),a("code",[t._v("interrupted()")]),t._v(" 也可以检测 "),a("code",[t._v("请求中断标志")]),t._v("，并自动将 "),a("code",[t._v("请求中断标志")]),t._v(" 置为 false。")]),t._v(" "),a("p",[t._v("部分可中断的线程方法，会定期执行 "),a("code",[t._v("isInterrupted()")]),t._v(" 方法，检测到变化时停止阻塞并抛出 InterruptedException 异常。")]),t._v(" "),a("p",[t._v("在捕获 InterruptedException 异常的时候会自动将 "),a("code",[t._v("请求中断标志")]),t._v(" 置为 false。")]),t._v(" "),a("h3",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" stop")]),t._v(" "),a("p",[t._v("已废弃")]),t._v(" "),a("p",[t._v("强制让线程停止有可能使一些清理性的工作得不到完成。")]),t._v(" "),a("p",[t._v("会对锁定的对象进行解锁，导致数据得不到同步处理，出现数据不一致的问题。")]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/67790293/answer/262657825",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 多线程为何会出现无法捕获异常的现象"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);