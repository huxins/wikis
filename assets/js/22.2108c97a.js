(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{305:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"n1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#n1"}},[a._v("#")]),a._v(" N1")]),a._v(" "),t("h2",{attrs:{id:"系统还原"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统还原"}},[a._v("#")]),a._v(" 系统还原")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-413863-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("N1刷完ARMBIAN想恢复EMMC超级简单线刷法，还可救砖"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-362781-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("N1把ArmBian刷入EMMC后恢复电视盒子/安卓方法整理"),t("OutboundLink")],1)])]),a._v(" "),t("h3",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[a._v("#")]),a._v(" 准备工作")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("WEBPAD大的2.2线刷包 "),t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-338759-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("传送门"),t("OutboundLink")],1)])]),a._v(" "),t("li",[t("p",[a._v("USB_Burning_Tool 刷机工具 "),t("a",{attrs:{href:"http://www.upantool.com/gujian/2018/12380.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("传送门"),t("OutboundLink")],1)])]),a._v(" "),t("li",[t("p",[a._v("USB对公线一条")])])]),a._v(" "),t("h3",{attrs:{id:"开始刷机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始刷机"}},[a._v("#")]),a._v(" 开始刷机")]),a._v(" "),t("ol",[t("li",[a._v("先把USB对公线链接到电脑USB口与N1的第二个口（靠HDMI口），N1不要通电")]),a._v(" "),t("li",[a._v("打开USB_Burning_Tool，导入固件WEBPAD大的2.2的线刷包，验证通过后，出现开始字样")]),a._v(" "),t("li",[a._v("勾选"),t("span",{staticStyle:{color:"blue"}},[a._v("擦除FLASH")]),a._v("，不要勾选"),t("span",{staticStyle:{color:"red"}},[a._v("擦除bootloader")]),a._v("，USB_Burning_Tool点击开始运行刷机，"),t("span",{staticStyle:{color:"red"}},[a._v("3秒钟内速度让N1通电")])]),a._v(" "),t("li",[a._v("USB_Burning_Tool开始正常识别N1线刷模式，刷机开始")]),a._v(" "),t("li",[a._v("烧录完成后，拔电重启，N1恢复了原来的样子，可以正常ADB连接")])]),a._v(" "),t("h2",{attrs:{id:"刷入系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#刷入系统"}},[a._v("#")]),a._v(" 刷入系统")]),a._v(" "),t("p",[a._v("设置盒子从U盘启动")]),a._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\\adb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exe connect 192"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("168"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("186\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\\adb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exe shell reboot update\n")])])]),t("h3",{attrs:{id:"openwrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openwrt"}},[a._v("#")]),a._v(" OpenWRT")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-4043089-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("在线云编译斐讯N1的openwrt固件"),t("OutboundLink")],1)])]),a._v(" "),t("h4",{attrs:{id:"橙子-openwrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#橙子-openwrt"}},[a._v("#")]),a._v(" 橙子 OpenWrt")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.maxlicheng.com/embedded/36.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("斐讯N1 eMMC 刷入OpenWRT系统教程笔记"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("制作XQ7大神的Armbian系统 U盘镜像，并将Armbian写入到eMMC中")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("/boot/create-mbr-linux.sh\n./install.sh\n")])])]),t("p",[a._v("通过文件传输软件，将OpenWRT镜像文件上传到盒子root目录")]),a._v(" "),t("p",[a._v("完成后，创建一个emmc2文件夹")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" /emmc2\n")])])]),t("p",[a._v("将eMMC其中一个分区(Armbian所在的分区)挂载到新创建的emmc2文件夹")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mount")]),a._v(" /dev/mmcblk1p2 /emmc2\n")])])]),t("p",[a._v("删除Armbian的所有文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" /emmc2/*\n")])])]),t("p",[a._v("挂载我们的OpenWRT镜像")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("losetup "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--show")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019.05")]),a._v(".26-openwrt-on-phicomm-n1-bycheng.img\n")])])]),t("p",[a._v("挂载到指定文件夹")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mount")]),a._v(" /dev/loop0p2 /media\n")])])]),t("p",[a._v("将OpenWRT的所有文件拷贝到Armbian文件夹")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-R")]),a._v(" /media/* /emmc2\n")])])]),t("p",[a._v("卸载挂载")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("umount")]),a._v(" /media\nlosetup "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" /dev/loop0\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("umount")]),a._v(" /emmc2\n")])])]),t("p",[a._v("重启盒子，先拔盒子电源，然后取下U盘，再插入电源")]),a._v(" "),t("h4",{attrs:{id:"gd772-openwrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gd772-openwrt"}},[a._v("#")]),a._v(" gd772 OpenWrt")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-3160780-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("自编N1盒子 Openwrt 固件,支持写入EMMC！"),t("OutboundLink")],1)])]),a._v(" "),t("h4",{attrs:{id:"flippy-openwrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flippy-openwrt"}},[a._v("#")]),a._v(" flippy OpenWrt")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-981406-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("N1_OP_U盘直刷包，及贝壳云_OP_线刷包"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("查看流控(rx/tx)："),t("code",[a._v("dmesg | grep dwmac")])]),a._v(" "),t("p",[a._v("写入 emmc："),t("code",[a._v("/root/inst-to-emmc.sh")])]),a._v(" "),t("p",[a._v("docker 数据目录："),t("code",[a._v("/mnt/mmcblk1p3/docker")])]),a._v(" "),t("p",[a._v("旁路由防火墙："),t("code",[a._v("iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE")])]),a._v(" "),t("h3",{attrs:{id:"armbian"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#armbian"}},[a._v("#")]),a._v(" Armbian")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-788004-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("N1首个支持FullCone Nat的Armbian系统"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://yuerblog.cc/2019/10/23/%e6%96%90%e8%ae%afn1-%e5%ae%8c%e7%be%8e%e5%88%b7%e6%9c%baarmbian%e6%95%99%e7%a8%8b/",target:"_blank",rel:"noopener noreferrer"}},[a._v("斐讯N1 – 完美刷机Armbian教程"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-739757-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("小狮子N1学习个人笔记"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("刷入系统")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("/boot/create-mbr-linux.sh\n/root/install.sh\n")])])]),t("ul",[t("li",[t("a",{attrs:{href:"https://yuerblog.cc/2019/11/06/%e6%96%90%e8%ae%afn1-armbian%e4%bf%9d%e6%8a%a4emmc-%e7%a6%81%e6%ad%a2-var-log%e6%97%a5%e5%bf%97/",target:"_blank",rel:"noopener noreferrer"}},[a._v("armbian保护emmc – 禁止/var/log日志"),t("OutboundLink")],1)])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/cron.d/armbian-truncate-logs\n*/15 * * * * root /usr/lib/armbian/armbian-truncate-logs\n")])])]),t("p",[a._v("在 /usr/lib/armbian/armbian-ramlog syncToDisk 函数 头部返回即可避免将日志 rsync 到 emmc")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("syncToDisk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# no sync to protect emmc")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n\tisSafe\n\n\t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(": Syncing logs from "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LOG_TYPE")]),a._v(" to storage"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LOG_OUTPUT")]),a._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USE_RSYNC")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-aXWv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" armbian-ramlog.log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--links")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$RAM_LOG")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HDD_LOG")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LOG_OUTPUT")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rfup")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$RAM_LOG")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HDD_LOG")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LOG_OUTPUT")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sync")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("armbian做了一个systemd服务：/lib/systemd/system/armbian-ramlog.service，它开机会创建zram盘，然后从emmc的/var/log.hdd中load数据到zram的/var/log路径下，完成开机初始化。")]),a._v(" "),t("p",[t("strong",[a._v("换源")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" s@/httpredir.debian.org/@/mirrors.ustc.edu.cn/@g  /etc/apt/sources.list\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" s@/security.debian.org/@/mirrors.ustc.edu.cn/debian-security/@g  /etc/apt/sources.list\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" s@apt.armbian.com@mirrors.tuna.tsinghua.edu.cn/armbian@g  /etc/apt/sources.list.d/armbian.list\n")])])]),t("p",[t("strong",[a._v("openwrt")])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://mlapp.cn/376.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("在Docker 中运行 OpenWrt 旁路网关"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://jkdigger.me/2019/12/02/n1-docker%E7%89%88openwrt%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker版Openwrt更新方法"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.right.com.cn/forum/thread-958173-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker Openwrt r20.04.08"),t("OutboundLink")],1)])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ifconfig")]),a._v(" eth1 promisc  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置混杂模式")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ifconfig")]),a._v(" eth1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-promisc")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取消混杂模式")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" eth0  promisc on  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置混杂模式")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" eth0  promisc off  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取消混杂模式")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 拉取openwrt")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull unifreq/openwrt-aarch64:r20.04.08\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建macvlan网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" macvlan "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".11.0/24 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gateway")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".11.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("parent")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("eth0 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("macvlan_mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bridge macnet\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看已创建网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" OpenWrt "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" macnet "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--privileged")]),a._v(" unifreq/openwrt-aarch64:r20.04.08 /sbin/init\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 其他镜像")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull kanshudj/n1-openwrtgateway:latest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改管理地址")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/config/network\noption ipaddr "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'192.168.2.3'")]),a._v("\noption netmask "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'255.255.255.0'")]),a._v("\noption gateway "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'192.168.2.1'")]),a._v("\noption dns "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'114.114.114.114 223.5.5.5 180.76.76.76 8.8.4.4'")]),a._v("\n$ /etc/init.d/network restart\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 永久开启混杂模式")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/network/interfaces\nauto eth0\niface eth0 inet manual\nup "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" eth0 promisc on\nauto macvlan\niface macvlan inet static\n   address "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".12.104→修改成你需要的\n   netmask "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("255.255")]),a._v(".255.0\n   gateway "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".12.1→需改成你的主路由ip或192.168.12.5（旁路由的ip）\n   dns-nameservers "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".12.1→需改成你的主路由ip或12.5或再加1个公共dns比如114\n   pre-up "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" macvlan "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" eth0 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v(" macvlan mode bridge\n   post-down "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" del macvlan "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v(" eth0 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v(" macvlan mode bridge\n$ systemctl restart networking\n")])])]),t("p",[t("strong",[a._v("固定IP")])]),a._v(" "),t("p",[a._v("给N1设置一个固定IP只需")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("armbian-config\nnetwork\neth0\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v("\nstatic\n")])])]),t("p",[a._v("Edit /etc/network/interfaces and change from:")]),a._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[a._v("iface eth0 inet dhcp\n")])])]),t("p",[a._v("to - for example:")]),a._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[a._v("iface eth0 inet static\n \taddress 192.168.1.100\n\tnetmask 255.255.255.0\n\tgateway 192.168.1.1\n")])])]),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[a._v("auto lo\nauto ens33  #开机自动连接网络\niface lo inet loopback\nallow-hotplug ens33\niface ens33inet static   #static表示使用固定ip，dhcp表述使用动态ip\naddress 192.168.2.22  #设置ip地址\nnetmask 255.255.255.0  #设置子网掩码\ngateway 192.168.2.2    #设置网关\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#network 192.168.2.0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#broadcast 192.168.2.255")]),a._v("\n\n\nauto lo\nauto eth0  #开机自动连接网络\niface lo inet loopback\nallow-hotplug eth0\niface eth0 inet static   #static表示使用固定ip，dhcp表述使用动态ip\naddress 192.168.1.233   #设置ip地址\nnetmask 255.255.255.0  #设置子网掩码\ngateway 192.168.1.1    #设置网关\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);