(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{592:function(o,t,s){"use strict";s.r(t);var r=s(14),v=Object(r.a)({},(function(){var o=this,t=o._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h1",{attrs:{id:"hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[o._v("#")]),o._v(" Hooks")]),o._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://ops-coffee.cn/s/xjlojmj9gtbfgnpwn_yu2a",target:"_blank",rel:"noopener noreferrer"}},[o._v("SVN Hooks的介绍及使用"),t("OutboundLink")],1)])]),o._v(" "),t("h2",{attrs:{id:"应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[o._v("#")]),o._v(" 应用")]),o._v(" "),t("p",[o._v("svn hooks 位于 svn 版本库的 hooks 文件夹下")]),o._v(" "),t("h2",{attrs:{id:"服务端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[o._v("#")]),o._v(" 服务端")]),o._v(" "),t("p",[t("strong",[o._v("pre-lock")]),o._v("：文件加锁前执行，不常用")]),o._v(" "),t("p",[t("strong",[o._v("post-lock")]),o._v("：文件加锁后执行，通常用来发送锁定事件通知，需要传递两个参数给 hooks 脚本，按照顺序依次为：1. 版本库路径，2. 锁定路径的认证用户名")]),o._v(" "),t("p",[t("strong",[o._v("per-unlock")]),o._v("：文件解锁前执行，不常用")]),o._v(" "),t("p",[t("strong",[o._v("post-unlock")]),o._v("：文件解锁后执行，通常用来发送解锁事件通知，需要传递两个参数给 hooks 脚本，按照顺序依次为：1. 版本库路径，2. 解锁路径的认证用户名")]),o._v(" "),t("p",[t("strong",[o._v("start-commit")]),o._v("：开始提交时执行，在 "),t("code",[o._v("pre-commit")]),o._v(" 之前，通常用来确定用户是否有提交权限")]),o._v(" "),t("p",[t("strong",[o._v("pre-commit")]),o._v("：提交之前执行，在 "),t("code",[o._v("start-commit")]),o._v(" 之后，通常用来对提交内容的检查，例如我们后边要介绍的利用 "),t("code",[o._v("pre-commit")]),o._v(" 做提交 log 的合规性检查，需要传递两个参数给 hooks 脚本，按照顺序依次为：1. 版本库路径，2. 提交事务的名称")]),o._v(" "),t("p",[t("strong",[o._v("post-commit")]),o._v("：提交完成后执行，这应该是使用最广的 hooks 之一，通常用来在提交之后发送提交通知，甚至是利用它来做自动化的 CI/CD 等操作，需要传递两个参数给 hooks 脚本，按照顺序依次为：1. 版本库路径，2. 提交创建的修订版本号")]),o._v(" "),t("p",[t("strong",[o._v("pre-revprop-change")]),o._v("：在修改 revision 属性之前执行，不常用")]),o._v(" "),t("p",[t("strong",[o._v("post-revprop-change")]),o._v("：在修改 revision 属性之后执行，不常用")])])}),[],!1,null,null,null);t.default=v.exports}}]);