(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{319:function(s,t,e){"use strict";e.r(t);var n=e(14),a=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"sni-代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sni-代理"}},[s._v("#")]),s._v(" SNI 代理")]),s._v(" "),t("h2",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),t("p",[s._v("国外配置")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v("  nginx")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#机器几个核就写几，更通用的方法是auto，Nginx会自动应用合适的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_processes")]),s._v("  auto")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("error_log")]),s._v("  /var/log/nginx/error.log error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pid")]),s._v("        /var/run/nginx.pid")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#Nginx允许使用的最大文件描述符数量限制，适当调大可避免"too many open files"错误')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_rlimit_nofile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("events")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置轮询方法")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" epoll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#单个工作进程可以允许同时建立外部连接的数量，低配机器慎加")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_connections")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("262144")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#尽可能多地接收连接")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("multi_accept")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("stream")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里定义一个后端的map，防止直接通过https方式访问IP造成的循环反代")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ssl_preread_server_name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$backend")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ~*[0-9]$              "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unix:/dev/shm/null.sock")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ssl_preread_server_name:")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$server_port")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下面这段就是sni代理+ssl加密服务端的实现")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4333")]),s._v(" ssl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#与防火墙内Nginx服务器使用ssl加密方式进行连接，效果和stunnel等隧道代理类似，")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里主要为了加密流量实现防火墙穿透")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_protocols")]),s._v("       TLSv1 TLSv1.1 TLSv1.2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_ciphers")]),s._v("         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#服务端加密方式优先")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ssl_prefer_server_ciphers on;")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#证书文件，可以是自签证书，这里的证书配置主要是服务端验证客户端时要用到，")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#可以用这两行的命令自签（记得去掉#号）：")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#openssl req -new -x509 -days 3650 -nodes -subj "/C=CA/ST=CA/L=CA/O=CA/OU=CA/CN=CA" \\')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#-out /etc/nginx/cert.pem -keyout /etc/nginx/key.pem")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_certificate")]),s._v("     /etc/nginx/cert.pem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_certificate_key")]),s._v(" /etc/nginx/key.pem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下面三条配置是用来验证客户端的，防止非授权客户端连接，没错，这里博主懒得再签一个了")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_client_certificate")]),s._v(" /etc/nginx/cert.pem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_trusted_certificate")]),s._v(" /etc/nginx/cert.pem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#验证客户端貌有问题")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ssl_verify_client on;")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_session_cache")]),s._v("   shared:SSL:20m")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_session_timeout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10m")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下面是sni代理转发设置")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ssl_preread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DNS服务器设置，用来解析$ssl_preread_server_name（也就是https中的域名）")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意，下面一定要替换成可用的dns！")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#我在此处用来限制被代理域名，不能啥网站都代啊对不，当然你也可以用map去限制域名，一样的效果")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果允许代理任何https站点，可以设置为resolver 8.8.8.8;")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#resolver 127.0.0.1:5353;")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("resolver")]),s._v(" 8.8.8.8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$backend")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);